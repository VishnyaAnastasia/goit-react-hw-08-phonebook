{"version":3,"file":"static/js/398.a795613d.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/Contacts/Contacts.jsx","components/Phonebook/Phonebook.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderSpam\":\"Loader_loaderSpam__Px+fD\"};","import { InfinitySpin } from 'react-loader-spinner';\n\nimport styles from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={styles.loaderSpam}>\n      <InfinitySpin width=\"200\" color=\"white\" />\n    </div>\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"Contacts_contactsList__g3sDu\",\"contactCard\":\"Contacts_contactCard__x9wUk\",\"contactsInfo\":\"Contacts_contactsInfo__708rr\",\"contactsActions\":\"Contacts_contactsActions__D8P2r\"};","// extracted by mini-css-extract-plugin\nexport default {\"sectionStyle\":\"Section_sectionStyle__qO4eM\",\"title\":\"Section_title__SLHvV\"};","import styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ children, title }) => {\n  return (\n    <div className={styles.sectionStyle}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\n\nimport { selectFilter } from 'redux/filter/filter-selectors';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nimport Loader from 'components/Loader/Loader';\n\nimport styles from './Contacts.module.css';\nimport { Section } from 'components/Section/Section';\nimport { Card, CardActions, IconButton } from '@mui/material';\n\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return isLoading && contacts.length === 0 ? (\n    <Loader />\n  ) : (\n    <Section>\n      <ul className={styles.contactsList}>\n        {filteredContacts.map(({ id, number, name }) => (\n          <li key={id}>\n            <Card sx={{ maxWidth: 345 }} className={styles.contactCard}>\n              <div className={styles.contactsInfo}>\n                <p>{name}</p>\n                <p>{number}</p>\n              </div>\n              <CardActions disableSpacing className={styles.contactsActions}>\n                <IconButton onClick={() => dispatch(deleteContact(id))}>\n                  <DeleteOutlineIcon />\n                </IconButton>\n              </CardActions>\n            </Card>\n          </li>\n        ))}\n      </ul>\n    </Section>\n  );\n};\n","import { Box, Button, Container, TextField } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nNotify.init({\n  useIcon: false,\n  fontSize: '20px',\n  position: 'right-top',\n  width: '350px',\n  height: '35px',\n  clickToClose: true,\n});\n\nexport const Phonebook = ({ id }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const inputHandler = event => {\n    if (event.target.name === 'name') {\n      setName(event.target.value);\n    }\n\n    if (event.target.name === 'number') {\n      setNumber(event.target.value);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const rename = contacts.find(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase()\n    );\n    if (rename) {\n      Notify.warning(`Oppps.. ${name} is already in contacts`);\n      event.target.reset();\n      return;\n    }\n\n    const newContact = { id: id, name: name, number: number };\n\n    dispatch(addContact(newContact));\n    event.target.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          component=\"form\"\n          onSubmit={submitHandler}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            onInput={inputHandler}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Anastasia Vishnyakova\"\n            required\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n          ></TextField>\n          <TextField\n            onInput={inputHandler}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"555-05-55\"\n            required\n            margin=\"normal\"\n            fullWidth\n            id=\"tel\"\n          ></TextField>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            SAVE\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { Box, Container, Grid, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch(selectFilter);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        component=\"form\"\n        noValidate\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Box noValidate sx={{ mt: 1 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"standard-basic\"\n                variant=\"standard\"\n                onInput={event => {\n                  dispatch(filterContacts(event.target.value));\n                }}\n                type=\"text\"\n                name=\"filter\"\n                placeholder=\"Find contacts by name\"\n                sx={{ mt: 5 }}\n              ></TextField>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { Contacts } from 'components/Contacts/Contacts';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nconst PhonebookPage = () => {\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <Phonebook />\n      {contacts.length > 0 && <Filter />}\n      <Contacts />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","className","styles","width","color","Section","children","title","Contacts","useSelector","dispatch","useDispatch","useEffect","fetchContacts","filteredContacts","name","toLowerCase","includes","length","map","id","number","Card","sx","maxWidth","CardActions","disableSpacing","IconButton","onClick","deleteContact","DeleteOutline","Notify","useIcon","fontSize","position","height","clickToClose","Phonebook","useState","setName","setNumber","inputHandler","event","target","value","Container","component","Box","marginTop","display","flexDirection","alignItems","onSubmit","preventDefault","rename","find","reset","newContact","addContact","noValidate","mt","TextField","onInput","type","pattern","placeholder","required","margin","fullWidth","Button","variant","mb","Filter","Grid","container","spacing","item","xs","filterContacts"],"sourceRoot":""}